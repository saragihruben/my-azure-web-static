"use strict";

exports.__esModule = true;
exports.default = void 0;
var _react = _interopRequireWildcard(require("react"));
var _composeStyle = _interopRequireDefault(require("../composeStyle"));
var _constants = require("../constants");
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); } // import PropTypes from 'prop-types'
const {
  load,
  loading,
  loaded,
  error,
  noicon,
  offline
} = _constants.icons;
class Media extends _react.PureComponent {
  constructor(props) {
    super(props);
    this.state = {
      isMounted: false
    };
  }
  componentDidMount() {
    this.setState({
      isMounted: true
    });
    if (this.props.onDimensions && this.dimensionElement)
      /* Firefox returns 0 for both clientWidth and clientHeight.
      To fix this we can check the parentNode's clientWidth and clientHeight as a fallback. */
      this.props.onDimensions({
        width: this.dimensionElement.clientWidth || this.dimensionElement.parentNode.clientWidth,
        height: this.dimensionElement.clientHeight || this.dimensionElement.parentNode.clientHeight
      });
  }
  renderIcon(props) {
    const {
      icon,
      icons,
      iconColor: fill,
      iconSize: size,
      theme
    } = props;
    const iconToRender = icons[icon];
    if (!iconToRender) return null;
    const styleOrClass = (0, _composeStyle.default)({
      width: size + 100,
      height: size,
      color: fill
    }, theme.icon);
    return /*#__PURE__*/_react.default.createElement('div', styleOrClass, [/*#__PURE__*/_react.default.createElement(iconToRender, {
      fill,
      size,
      key: 'icon'
    }), /*#__PURE__*/_react.default.createElement('br', {
      key: 'br'
    }), this.props.message]);
  }
  renderImage(props) {
    return props.icon === loaded ? /*#__PURE__*/_react.default.createElement("img", _extends({}, (0, _composeStyle.default)(props.theme.img), {
      src: props.src,
      alt: props.alt,
      width: props.width,
      height: props.height
    })) : /*#__PURE__*/_react.default.createElement("svg", _extends({}, (0, _composeStyle.default)(props.theme.img), {
      width: props.width,
      height: props.height,
      ref: ref => this.dimensionElement = ref
    }));
  }
  renderNoscript(props) {
    // render noscript in ssr + hydration to avoid hydration mismatch error
    return this.state.isMounted ? null : /*#__PURE__*/_react.default.createElement("noscript", null, /*#__PURE__*/_react.default.createElement("img", _extends({}, (0, _composeStyle.default)(props.theme.img, props.theme.noscript), {
      src: props.nsSrc,
      srcSet: props.nsSrcSet,
      alt: props.alt,
      width: props.width,
      height: props.height
    })));
  }
  render() {
    const props = this.props;
    const {
      placeholder,
      theme
    } = props;
    let background;
    if (props.icon === loaded) {
      background = {};
    } else if (placeholder.lqip) {
      background = {
        backgroundImage: "url(\"" + placeholder.lqip + "\")"
      };
    } else {
      background = {
        backgroundColor: placeholder.color
      };
    }
    return /*#__PURE__*/_react.default.createElement("div", _extends({}, (0, _composeStyle.default)(theme.placeholder, background, props.style, props.className), {
      onClick: this.props.onClick,
      onKeyPress: this.props.onClick,
      ref: this.props.innerRef
    }), this.renderImage(props), this.renderNoscript(props), this.renderIcon(props));
  }
}
exports.default = Media;
/*static propTypes = {
  /!** URL of the image *!/
  src: PropTypes.string.isRequired,
  /!** Width of the image in px *!/
  width: PropTypes.number.isRequired,
  /!** Height of the image in px *!/
  height: PropTypes.number.isRequired,
  placeholder: PropTypes.oneOfType([
    PropTypes.shape({
      /!** Solid color placeholder *!/
      color: PropTypes.string.isRequired,
    }),
    PropTypes.shape({
      /!**
       * [Low Quality Image Placeholder](https://github.com/zouhir/lqip)
       * [SVG-Based Image Placeholder](https://github.com/technopagan/sqip)
       * base64 encoded image of low quality
       *!/
      lqip: PropTypes.string.isRequired,
    }),
  ]).isRequired,
  /!** display icon *!/
  icon: PropTypes.oneOf([load, loading, loaded, error, noicon, offline])
    .isRequired,
  /!** Map of icons *!/
  icons: PropTypes.object.isRequired,
  /!** theme object - CSS Modules or React styles *!/
  theme: PropTypes.object.isRequired,
  /!** Alternative text *!/
  alt: PropTypes.string,
  /!** Color of the icon *!/
  iconColor: PropTypes.string,
  /!** Size of the icon in px *!/
  iconSize: PropTypes.number,
  /!** React's style attribute for root element of the component *!/
  style: PropTypes.object,
  /!** React's className attribute for root element of the component *!/
  className: PropTypes.string,
  /!** On click handler *!/
  onClick: PropTypes.func,
  /!** callback to get dimensions of the placeholder *!/
  onDimensions: PropTypes.func,
  /!** message to show below the icon *!/
  message: PropTypes.node,
  /!** reference for Waypoint *!/
  innerRef: PropTypes.func,
  /!** noscript image src *!/
  nsSrc: PropTypes.string,
  /!** noscript image srcSet *!/
  nsSrcSet: PropTypes.string,
}*/
_defineProperty(Media, "defaultProps", {
  iconColor: '#fff',
  iconSize: 64
});